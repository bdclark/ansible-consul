---
consul_version: 0.9.3

consul_zip: "consul_{{ consul_version }}_linux_amd64.zip"
consul_zip_url: "https://releases.hashicorp.com/consul/{{ consul_version }}/{{ consul_zip }}"

consul_checksum_file: "consul_{{ consul_version }}_SHA256SUMS"
consul_checksum_url: "https://releases.hashicorp.com/consul/{{ consul_version }}/{{ consul_checksum_file }}"

consul_verify_checksum_signature: true
consul_signature_file: "{{ consul_checksum_file }}.sig"
consul_signature_url: "https://releases.hashicorp.com/consul/{{ consul_version }}/{{ consul_signature_file }}"

consul_zip_checksum: "{{ consul_checksums[consul_zip] }}"
consul_zip_dir: /tmp  # path to download consul zip file before extraction

consul_bin_dir: /usr/local/bin          # dir to extract consul binary
consul_data_dir: /var/lib/consul        # consul data dir
consul_log_dir: /var/log/consul         # log dir only used with sysvinit
consul_conf_dir: /etc/consul            # base dir for consul config files
consul_conf_dir_owner: root             # owner of consul config dir
consul_conf_dir_mode: 0750              # mode of consul config dir

consul_user_managed: true               # if true will create consul user/group
consul_user: consul
consul_group: consul

consul_service_managed: true            # create/start/reload/restart service
consul_service_enabled: true            # whether service is enabled/disabled
consul_service_state: started           # desired state of consul service
consul_service_restart_on_update: true  # restart on config file/service changes
consul_service_stop_signal: INT         # signal to send when service stops

# auto-detection of consul bind/client addresses based on interface
# for consul_auto_*_iface, use iface name (eg. eth0) or null for ansible_default_ipv4
consul_auto_bind_enabled: true
consul_auto_client_enabled: false
consul_auto_bind_iface: ~
consul_auto_client_iface: ~

# if set, will render cert/consul.crt, cert/consul.key, cert/ca.crt in consul_conf_dir
consul_cert_content: ~
consul_key_content: ~
consul_ca_content: ~

# consul init method; can be upstart, systemd, sysvinit, or null to auto-detect
consul_init_method: ~

consul_config: {}         # config settings passed to consul.json conf file
consul_services: {}       # dict of individual consul service files to render
consul_services_bulk: []  # array of services to render in one file (services.json)
consul_checks: {}         # dict of individual checks files to render
consul_checks_bulk: []    # array of checks to render in one file (checks.json)

# consul dnsmasq settings
consul_install_dnsmasq: false
consul_dnsmasq_networkmanager_enabled: false  # use true when RHEL and NetworkManager
consul_dnsmasq_upstream_servers: []

# consulate settings
consul_install_consulate: false
consul_consulate_url: ~ # url to remote package; defaults to consulate on PyPI
consul_consulate_version: ~ # optional package version

# templates used in this role
consul_upstart_template: consul.conf.j2
consul_systemd_template: consul.service.j2
consul_sysvinit_template: consul.sysvinit.j2
consul_dnsmasq_upstream_template: dnsmasq_resolv.conf.j2
